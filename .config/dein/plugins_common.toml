# =====================================
# Color
#
[[plugins]]
repo = 'itchyny/lightline.vim'

#======================================
# Git
#
[[plugins]]
repo = 'tpope/vim-git'

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'airblade/vim-gitgutter'
hook_add = '''
let g:gitgutter_enabled = 0
nnoremap <silent> ,gg :<C-u>GitGutterToggle<CR>
nnoremap <silent> ,gh :<C-u>GitGutterLineHighlightsToggle<CR>
'''

[[plugins]]
repo = 'rhysd/committia.vim'
hook_add = '''
let g:committia_hooks = {}
function! g:committia_hooks.edit_open(info)
  setlocal spell
  if a:info.vcs ==# 'git' && getline(1) ==# ''
    startinsert
  end
  imap <buffer><C-j>  <Plug>(committia-scroll-diff-down-half)
  imap <buffer><C-k>  <Plug>(committia-scroll-diff-up-half)
endfunction
'''

#======================================
# Edit Helper
#
[[plugins]]
repo = 'editorconfig/editorconfig-vim'
on_path = '.*'

[[plugins]]
repo = 'Shougo/context_filetype.vim'
on_if = 1

[[plugins]]
repo = 'kana/vim-operator-user'

[[plugins]]
repo = 'kana/vim-operator-replace'
hook_add = '''
map _ <Plug>(operator-replace)
'''

[[plugins]]
repo = 'rhysd/vim-operator-surround'
hook_add = '''
map <silent>sa <Plug>(operator-surround-append)
map <silent>sd <Plug>(operator-surround-delete)
map <silent>sr <Plug>(operator-surround-replace)
'''

[[plugins]]
repo = 'tyru/caw.vim.git'
hook_add = '''
autocmd BufNewFile,BufRead .snippets setlocal filetype=ruby
nmap  <C-_> <Plug>(caw:hatpos:toggle)
vmap  <C-_> <plug>(caw:hatpos:toggle)
'''

[[plugins]]
repo = 'jiangmiao/auto-pairs'
hook_add = '''
let g:AutoPairsMapSpace = 0
'''

[[plugins]]
repo = 'junegunn/vim-easy-align'
hook_add = '''
vmap <Enter> <Plug>(EasyAlign)
nmap ga <Plug>(EasyAlign)
'''

[[plugins]]
repo = 'tpope/vim-endwise'

[[plugins]]
repo = 'jgdavey/vim-blockle'

[[plugins]]
repo = 'neomake/neomake'
if = 'has("nvim")'
hook_source = 'source $XDG_CONFIG_HOME/dein/rc/neomake.rc.vim'

